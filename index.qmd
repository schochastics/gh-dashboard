---
page-title: "Repository Dashboard"
format: dashboard
theme: darkly
execute: 
  echo: false
---

```{r}
library(reactable)
repos <- read.csv("repos.csv", row.names = NULL)
last <- read.csv("last_week.csv", row.names = NULL)
res <- read.csv("current_week.csv", row.names = NULL)

green_pal <- function(x) rgb(colorRamp(c("#008000", "#00ff00"))(x), maxColorValue = 255)
```

## Row

```{r}
#| content: valuebox
#| title: "R packages"
list(
    icon = "box-fill",
    color = "#0000cc",
    value = sum(repos$type == "R package")
)
```

```{r}
#| content: valuebox
#| title: "Quarto extensions"
list(
    icon = "file-text-fill",
    color = "#0000cc",
    value = sum(repos$type == "Quarto extension")
)
```

```{r}
#| content: valuebox
#| title: "New Stars"
list(
    icon = "stars",
    color = "#DBAC34",
    value = sum(res$stars) - sum(last$stars)
)
```

```{r}
#| content: valuebox
#| title: "+/- Issues"
list(
    icon = "exclamation-circle-fill",
    color = "#cc0000",
    value = sum(res$open_issues) - sum(last$open_issues)
)
```

## Row

```{r}
reactable(
    res,
    defaultSorted = list(last_issue_activity = "desc"),
    columns = list(
        owner = colDef(name = "Owner"),
        repo = colDef(
            name = "Repository",
            html = TRUE,
            cell = function(value, index) {
                sprintf('<a href="https://github.com/%s/%s" target="_blank">%s</a>', res$owner[index], value, value)
            }
        ),
        last_push = colDef(
            name = "Last Push",
            format = colFormat(datetime = TRUE),
            style = function(value) {
                normalized <- pmin(difftime(Sys.time(), value, units = "days") / 365, 1)
                color <- if (normalized <= 0.25) {
                    "#00cc00"
                } else if (normalized <= 0.5) {
                    "#00ff00"
                } else if (normalized <= 0.75) {
                    "#ffa500"
                } else if (normalized > 0.75) {
                    "#cc0000"
                }
                # color <- green_pal(normalized)
                list(background = color, color = "black")
            }
        ),
        stars = colDef(name = "Stars"),
        forks = colDef(name = "Forks"),
        open_issues = colDef(name = "Open Issues"),
        last_issue_activity = colDef(
            name = "Last Issue Activity",
            format = colFormat(datetime = TRUE),
            style = function(value) {
                color <- ifelse(difftime(Sys.time(), value, units = "days") <= 7, "#cc0000", "#2D2D2D")
                color[is.na(color)] <- "#2D2d2D"
                list(background = color)
            }
        )
    ),
    defaultPageSize = nrow(repos),
    theme = reactableTheme(backgroundColor = "#2D2D2D")
)
```

## Row

```{r}
#| title: CRAN Checks
cran <- read.csv("cran_status.csv", row.names = NULL)
reactable(cran,
    columns = list(
        Package = colDef(
            style = function(value) {
                list(background = "#2D2D2D", color = "white")
            }
        )
    ),
    defaultColDef = colDef(
        style = function(value) {
            color <- if (value == "ERROR") {
                "#cc0000"
            } else if (value == "WARNING") {
                "#ffa500"
            } else if (value == "NOTE") {
                "#00ff00"
            } else if (value == "OK") {
                "#00cc00"
            } else {
                color <- "#2D2D2D"
            }
            list(background = color, color = "black")
        }
    ),
    defaultPageSize = nrow(cran),
    theme = reactableTheme(backgroundColor = "#2D2D2D")
)
```
